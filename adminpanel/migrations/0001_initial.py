# Generated by Django 3.1.4 on 2021-03-11 12:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('ActivityTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('ActivityType', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementPost',
            fields=[
                ('Announcement_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Title1', models.CharField(blank=True, max_length=2000, null=True)),
                ('Title2', models.CharField(blank=True, max_length=2000, null=True)),
                ('Description', models.CharField(blank=True, max_length=2000, null=True)),
                ('PostImage', models.ImageField(blank=True, null=True, upload_to='')),
                ('IsActive', models.BooleanField(blank=True, default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('Category_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('ConfigurationId', models.AutoField(primary_key=True, serialize=False)),
                ('ConfigurationName', models.CharField(blank=True, max_length=2000, null=True)),
                ('DisplayName', models.CharField(blank=True, max_length=2000, null=True)),
                ('ConfigurationValue', models.CharField(blank=True, max_length=2000, null=True)),
                ('Image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('Customer_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Phone_No', models.CharField(blank=True, max_length=100, null=True)),
                ('Enrolled_Date', models.DateTimeField(auto_now_add=True, null=True)),
                ('First_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Last_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Email', models.CharField(blank=True, max_length=200, null=True)),
                ('Gender', models.CharField(blank=True, max_length=100, null=True)),
                ('PersonalDiscount', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('Stripe_Id', models.CharField(blank=True, max_length=255, null=True)),
                ('Referral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.customer')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountType',
            fields=[
                ('Discount_Type_Id', models.AutoField(primary_key=True, serialize=False)),
                ('DiscountCode', models.CharField(max_length=50)),
                ('DiscountDescription', models.CharField(blank=True, max_length=100, null=True)),
                ('Percentage', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('DiscountFrom', models.DateField(blank=True, null=True)),
                ('DiscountTo', models.DateField(blank=True, null=True)),
                ('IsReferralDiscount', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstallmentType',
            fields=[
                ('Installment_Type_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Installment_Type', models.CharField(max_length=50)),
                ('Installment_TypeUnchanged', models.CharField(blank=True, max_length=50, null=True)),
                ('Description', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('Order_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Order_Date', models.DateTimeField(auto_now_add=True, null=True)),
                ('IsOrderCompleted', models.BooleanField(blank=True, default=False, null=True)),
                ('Transaction_Id', models.CharField(max_length=200, null=True)),
                ('ServiceDiscountCode', models.IntegerField(blank=True, null=True)),
                ('ProductDiscountCode', models.IntegerField(blank=True, null=True)),
                ('ServiceDiscountAmount', models.FloatField(blank=True, null=True)),
                ('ServiceTotalAmount', models.FloatField(blank=True, null=True)),
                ('ProductTotalAmount', models.FloatField(blank=True, null=True)),
                ('ConditionalVAT', models.FloatField(blank=True, null=True)),
                ('GeneralVAT', models.FloatField(blank=True, null=True)),
                ('OrderCompletionDate', models.DateField(auto_now_add=True, null=True)),
                ('ActualAmountToPay', models.FloatField(blank=True, null=True)),
                ('FullPaymentDiscountAmount', models.FloatField(blank=True, null=True)),
                ('Customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='adminpanel.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('OrderStatusId', models.AutoField(primary_key=True, serialize=False)),
                ('OrderStatusType', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('Product_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=255)),
                ('Code', models.CharField(max_length=255)),
                ('Description', models.CharField(max_length=2000)),
                ('DetailDescription', models.TextField(blank=True, null=True)),
                ('Price', models.FloatField(blank=True, null=True)),
                ('AdditionalMemberPrice', models.FloatField(blank=True, default=0, null=True)),
                ('Image', models.ImageField(blank=True, null=True, upload_to='')),
                ('IsProduct', models.BooleanField(blank=True, default=True, null=True)),
                ('InitialSetupCharge', models.FloatField(blank=True, default=0, null=True)),
                ('NoOfInstallmentMonths', models.IntegerField(blank=True, default=1, null=True)),
                ('IsDiscountable', models.BooleanField(blank=True, default=False, null=True)),
                ('DiscountPercentage', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('slug', models.SlugField(blank=True, editable=False, null=True)),
                ('StockLevel', models.IntegerField(blank=True, default=1, null=True)),
                ('Threshold', models.IntegerField(blank=True, default=10, null=True)),
                ('Category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.category')),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('UserTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('Type', models.CharField(max_length=100)),
                ('UserTypeUnchanged', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('ProductSpec_Id', models.AutoField(primary_key=True, serialize=False)),
                ('SpecificationName', models.CharField(blank=True, max_length=2000, null=True)),
                ('SpecificationValue', models.CharField(blank=True, max_length=2000, null=True)),
                ('Product', models.ForeignKey(blank=True, db_column='Product_Id', null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.product')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('Payment_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Payment_Type', models.CharField(blank=True, max_length=50, null=True)),
                ('Amount', models.FloatField(blank=True, null=True)),
                ('Date', models.DateTimeField(auto_now_add=True, null=True)),
                ('Is_Invoice_Sent', models.BooleanField(blank=True, default=False, null=True)),
                ('Stripe_Payment_Id', models.CharField(blank=True, max_length=100, null=True)),
                ('Discount_Type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.discounttype')),
                ('Installment_Type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.installmenttype')),
                ('Order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDiscount',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('DiscountType_Id', models.IntegerField(blank=True, null=True)),
                ('Order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('Date_Added', models.DateTimeField(auto_now_add=True, null=True)),
                ('TotalNoOfPerson', models.IntegerField(blank=True, default=1, null=True)),
                ('Order', models.ForeignKey(blank=True, db_column='Order_Id', null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.order')),
                ('Product', models.ForeignKey(blank=True, db_column='Product_Id', null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='OrderStatus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.orderstatus'),
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('InvoiceId', models.AutoField(primary_key=True, serialize=False)),
                ('InvoiceNumber', models.CharField(blank=True, max_length=50, null=True)),
                ('Filename', models.CharField(blank=True, max_length=2000, null=True)),
                ('CreatedBy', models.CharField(blank=True, max_length=200, null=True)),
                ('Content', models.FileField(blank=True, null=True, upload_to='')),
                ('Date', models.DateTimeField(auto_now_add=True, null=True)),
                ('Order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.order')),
            ],
        ),
        migrations.CreateModel(
            name='InstallmentDue',
            fields=[
                ('Installment_Due_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Customer_Id', models.IntegerField(blank=True, null=True)),
                ('User_Id', models.IntegerField(blank=True, null=True)),
                ('Amount_Due', models.FloatField(blank=True, null=True)),
                ('Due_Installments', models.IntegerField(blank=True, null=True)),
                ('InstalmentDueDate', models.DateTimeField(auto_now_add=True, null=True)),
                ('InstalmentReminderDay', models.IntegerField(blank=True, default=5, null=True)),
                ('PaymentRefId', models.IntegerField(blank=True, null=True)),
                ('IsInstalmentPaid', models.BooleanField(blank=True, default=False, null=True)),
                ('Order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.order')),
                ('OrderDetail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.orderdetails')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerDiscountEligibility',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('DiscountType_Id', models.IntegerField(blank=True, null=True)),
                ('DiscountApplicableLimit', models.IntegerField(blank=True, default=1, null=True)),
                ('IsUsed', models.BooleanField(blank=True, default=False, null=True)),
                ('Customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='ReferralDiscount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.discounttype'),
        ),
        migrations.AddField(
            model_name='customer',
            name='SameHousehold',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='within_same_family', to='adminpanel.customer'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('Address_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Addressline1', models.CharField(blank=True, max_length=255, null=True)),
                ('Addressline2', models.CharField(blank=True, max_length=255, null=True)),
                ('Addressline3', models.CharField(blank=True, max_length=255, null=True)),
                ('City', models.CharField(blank=True, max_length=100, null=True)),
                ('State', models.CharField(blank=True, max_length=100, null=True)),
                ('Postal_Code', models.CharField(blank=True, max_length=50, null=True)),
                ('Country', models.CharField(blank=True, max_length=100, null=True)),
                ('default', models.BooleanField(default=False)),
                ('Address_Type', models.CharField(choices=[('B', 'Billing'), ('S', 'Shipping')], default='B', max_length=1)),
                ('CountryCode', models.CharField(blank=True, max_length=100, null=True)),
                ('User_Id', models.ForeignKey(blank=True, db_column='User_Id', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('ActivityLogId', models.AutoField(primary_key=True, serialize=False)),
                ('ActivityDescription', jsonfield.fields.JSONField(blank=True, null=True)),
                ('LogCreatedDate', models.DateField(auto_now_add=True, null=True)),
                ('ActivityType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.activitytype')),
                ('User', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adminpanel.usertype'),
        ),
    ]
